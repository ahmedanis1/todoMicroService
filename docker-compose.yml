version: '3.9'

services:
  # MySQL Database
  mysql-db:
    image: mysql:8.0
    container_name: mysql-db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-rootpass123}
      MYSQL_ROOT_HOST: '%'
    ports:
      - "${MYSQL_PORT:-3307}:3306" # Host 3307 -> Container 3306
    volumes:
      - mysql-data:/var/lib/mysql
      - ./init-db:/docker-entrypoint-initdb.d
    networks:
      - todo-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-uroot", "-p${MYSQL_ROOT_PASSWORD:-rootpass123}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # User Service
  user-service:
    build:
      context: ./user-service
      dockerfile: Dockerfile
    container_name: user-service
    restart: unless-stopped
    ports:
      - "${USER_SERVICE_PORT:-3005}:3001" # Host 3005 -> Container 3001
    environment:
      NODE_ENV: ${NODE_ENV:-production}
      TYPEORM_SYNC: 'true'
      PORT: 3001
      DB_HOST: mysql-db
      DB_PORT: 3306
      DB_USER: userservice
      DB_PASSWORD: userpass123
      DB_NAME: userdb
      JWT_SECRET: ${JWT_SECRET:-your-super-secret-jwt-key-change-this}
      JWT_EXPIRES_IN: ${JWT_EXPIRES_IN:-24h}
      ALLOWED_ORIGINS: ${ALLOWED_ORIGINS:-http://localhost}
    depends_on:
      mysql-db:
        condition: service_healthy
    networks:
      - todo-network

  # Todo Service
  todo-service:
    build:
      context: ./todo-microservices/todo-service
      dockerfile: Dockerfile
    container_name: todo-service
    restart: unless-stopped
    ports:
      - "${TODO_SERVICE_PORT:-3006}:3002" # Host 3006 -> Container 3002
    environment:
      NODE_ENV: ${NODE_ENV:-production}
      TYPEORM_SYNC: 'true'
      PORT: 3002
      DB_HOST: mysql-db
      DB_PORT: 3306
      DB_USER: todoservice
      DB_PASSWORD: todopass123
      DB_NAME: tododb
      JWT_SECRET: ${JWT_SECRET:-your-super-secret-jwt-key-change-this}
      ALLOWED_ORIGINS: http://localhost:8080,http://127.0.0.1:8080
    depends_on:
      mysql-db:
        condition: service_healthy
    networks:
      - todo-network

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    restart: unless-stopped
    ports:
      - "${FRONTEND_PORT:-8080}:80" # Host 8080 -> Container 80
    depends_on:
      - user-service
      - todo-service
    networks:
      - todo-network

volumes:
  mysql-data:
    driver: local

networks:
  todo-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
